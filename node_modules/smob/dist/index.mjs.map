{"version":3,"file":"index.mjs","sources":["../src/constants.ts","../src/utils/array.ts","../src/utils/has-own-property.ts","../src/utils/check.ts","../src/utils/cut.ts","../src/utils/options.ts","../src/module.ts"],"sourcesContent":["/*\n * Copyright (c) 2023.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nexport enum PriorityName {\n    LEFT = 'left',\n    RIGHT = 'right',\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nexport function mergeArrays(\n    first: any[],\n    second: any[],\n    arrayDistinct: boolean,\n) {\n    if (arrayDistinct) {\n        return [...new Set(first.concat(second))];\n    }\n\n    return first.concat(second);\n}\n","/*\n * Copyright (c) 2021.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function hasOwnProperty<X extends {}, Y extends PropertyKey>(obj: X, prop: Y): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { hasOwnProperty } from './has-own-property';\n\nexport function isObject(item: unknown) : item is Record<string, any> {\n    return (\n        !!item &&\n        typeof item === 'object' &&\n        !Array.isArray(item)\n    );\n}\n\nexport function isObjectDeeperThan(value: unknown, depth: number) {\n    if (depth <= 0) {\n        return isObject(value);\n    }\n\n    if (!isObject(value)) {\n        return false;\n    }\n\n    const nextDepth = depth - 1;\n    const keys = Object.keys(value);\n    for (let i = 0; i < keys.length; i++) {\n        if (\n            hasOwnProperty(value, keys[i]) &&\n            isObjectDeeperThan(value[keys[i]], nextDepth)\n        ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isSafeObject(object: Record<string, any>) : boolean {\n    try {\n        JSON.stringify(object);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function isSafeKey(key: string) : boolean {\n    return key !== '__proto__' &&\n        key !== 'prototype' &&\n        key !== 'constructor';\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { isObject } from './check';\n\nexport function cutObject<T extends Record<string, any>>(input: T, depth: number) : T {\n    if (depth < 0) {\n        return {} as T;\n    }\n\n    const value = { ...input };\n    const keys : (keyof T)[] = Object.keys(value);\n\n    for (let i = 0; i < keys.length; i++) {\n        if (isObject(value[keys[i]])) {\n            value[keys[i]] = cutObject(value[keys[i]], depth - 1);\n        }\n    }\n\n    return value;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { PriorityName } from '../constants';\nimport type { Options, OptionsInput } from '../type';\n\nexport function buildOptions(options?: OptionsInput) : Options {\n    options = options || {};\n\n    options.array = options.array ?? true;\n    options.arrayDistinct = options.arrayDistinct ?? false;\n    options.priority = options.priority || PriorityName.LEFT;\n\n    return options as Options;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { PriorityName } from './constants';\nimport type {\n    Merger, MergerResult, Options, OptionsInput,\n} from './type';\nimport {\n    buildOptions,\n    hasOwnProperty,\n    isObject,\n    isSafeKey,\n    isSafeObject,\n    mergeArrays,\n} from './utils';\n\nexport function baseMerger<A extends Record<string, any>, B extends Record<string, any>>(\n    options: Options,\n    target: A,\n    ...sources: B[]\n) : MergerResult<A, B> {\n    if (!sources.length) return target as MergerResult<A, B>;\n\n    const source = sources.shift();\n\n    if (\n        isObject(target) &&\n        isObject(source)\n    ) {\n        const keys = Object.keys(source);\n        for (let i = 0; i < keys.length; i++) {\n            const key : string = keys[i];\n\n            if (!isSafeKey(key)) {\n                continue;\n            }\n\n            if (hasOwnProperty(target, key)) {\n                if (options.strategy) {\n                    const applied = options.strategy(target, key, source[key]);\n                    if (typeof applied !== 'undefined') {\n                        continue;\n                    }\n                }\n\n                if (!isSafeObject(source[key])) {\n                    continue;\n                }\n\n                if (\n                    isObject(target[key]) &&\n                    isObject(source[key])\n                ) {\n                    baseMerger(options, target[key], source[key]);\n\n                    continue;\n                }\n\n                if (\n                    options.array &&\n                    Array.isArray(target[key]) &&\n                    Array.isArray(source[key])\n                ) {\n                    switch (options.priority) {\n                        case PriorityName.LEFT:\n                            Object.assign(target, {\n                                [key]: mergeArrays(target[key], source[key], options.arrayDistinct),\n                            });\n                            break;\n                        case PriorityName.RIGHT:\n                            Object.assign(target, {\n                                [key]: mergeArrays(source[key], target[key], options.arrayDistinct),\n                            });\n                            break;\n                    }\n\n                    continue;\n                }\n\n                if (options.priority === PriorityName.RIGHT) {\n                    Object.assign(target, { [key]: source[key] });\n                }\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        }\n    }\n\n    return baseMerger(options, target, ...sources);\n}\n\nexport function createMerger(input?: OptionsInput) : Merger {\n    const options = buildOptions(input);\n\n    return <A extends Record<string, any>, B extends Record<string, any>>(\n        target: A,\n        ...sources: B[]\n    ) => baseMerger(options, target, ...sources);\n}\n\nexport const merge = createMerger();\n"],"names":["PriorityName","mergeArrays","first","second","arrayDistinct","Set","concat","hasOwnProperty","obj","prop","Object","prototype","call","isObject","item","Array","isArray","isObjectDeeperThan","value","depth","nextDepth","keys","i","length","isSafeObject","object","JSON","stringify","e","isSafeKey","key","_extends","cutObject","input","buildOptions","options","array","priority","LEFT","baseMerger","target","sources","source","shift","strategy","assign","RIGHT","createMerger","merge"],"mappings":"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"}