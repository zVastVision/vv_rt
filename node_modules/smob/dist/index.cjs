"use strict";var r;function t(r,t,e){return e?[...new Set(r.concat(t))]:r.concat(t)}function e(r,t){return Object.prototype.hasOwnProperty.call(r,t)}function n(r){return!!r&&"object"==typeof r&&!Array.isArray(r)}function i(r){try{return JSON.stringify(r),!0}catch(r){return!1}}function o(r){return"__proto__"!==r&&"prototype"!==r&&"constructor"!==r}function s(){return s=Object.assign||function(r){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(r[n]=e[n])}return r},s.apply(this,arguments)}function c(r){var t,e;return(r=r||{}).array=null==(t=r.array)||t,r.arrayDistinct=null!=(e=r.arrayDistinct)&&e,r.priority=r.priority||exports.PriorityName.LEFT,r}function a(r,s,...c){if(!c.length)return s;const y=c.shift();if(n(s)&&n(y)){const c=Object.keys(y);for(let u=0;u<c.length;u++){const p=c[u];if(o(p))if(e(s,p)){if(r.strategy){if(void 0!==r.strategy(s,p,y[p]))continue}if(!i(y[p]))continue;if(n(s[p])&&n(y[p])){a(r,s[p],y[p]);continue}if(r.array&&Array.isArray(s[p])&&Array.isArray(y[p])){switch(r.priority){case exports.PriorityName.LEFT:Object.assign(s,{[p]:t(s[p],y[p],r.arrayDistinct)});break;case exports.PriorityName.RIGHT:Object.assign(s,{[p]:t(y[p],s[p],r.arrayDistinct)})}continue}r.priority===exports.PriorityName.RIGHT&&Object.assign(s,{[p]:y[p]})}else Object.assign(s,{[p]:y[p]})}}return a(r,s,...c)}function y(r){const t=c(r);return(r,...e)=>a(t,r,...e)}exports.PriorityName=void 0,(r=exports.PriorityName||(exports.PriorityName={})).LEFT="left",r.RIGHT="right";const u=y();exports.baseMerger=a,exports.buildOptions=c,exports.createMerger=y,exports.cutObject=function r(t,e){if(e<0)return{};const i=s({},t),o=Object.keys(i);for(let t=0;t<o.length;t++)n(i[o[t]])&&(i[o[t]]=r(i[o[t]],e-1));return i},exports.hasOwnProperty=e,exports.isObject=n,exports.isObjectDeeperThan=function r(t,i){if(i<=0)return n(t);if(!n(t))return!1;const o=i-1,s=Object.keys(t);for(let n=0;n<s.length;n++)if(e(t,s[n])&&r(t[s[n]],o))return!0;return!1},exports.isSafeKey=o,exports.isSafeObject=i,exports.merge=u,exports.mergeArrays=t;
//# sourceMappingURL=index.cjs.map
