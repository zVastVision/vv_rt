'use strict';

const vue = require('vue');

let clientRef;
const fns = [];
function onDevtoolsClientConnected(fn) {
  fns.push(fn);
  if (typeof window === "undefined")
    return;
  if (window.__NUXT_DEVTOOLS__) {
    fns.forEach((fn2) => fn2(window.__NUXT_DEVTOOLS__));
  }
  Object.defineProperty(window, "__NUXT_DEVTOOLS__", {
    set(value) {
      if (value)
        fns.forEach((fn2) => fn2(value));
    },
    get() {
      return clientRef.value;
    },
    configurable: true
  });
  return () => {
    fns.splice(fns.indexOf(fn), 1);
  };
}
function useDevtoolsClient() {
  if (!clientRef) {
    clientRef = vue.shallowRef();
    onDevtoolsClientConnected(setup);
  }
  function setup(client) {
    clientRef.value = client;
    if (client.host) {
      client.host.hooks.hook("host:update:reactivity", () => {
        vue.triggerRef(clientRef);
      });
    }
  }
  return clientRef;
}

exports.onDevtoolsClientConnected = onDevtoolsClientConnected;
exports.useDevtoolsClient = useDevtoolsClient;
